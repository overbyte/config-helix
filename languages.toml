[language-server]
deno = { command = "deno", args = [ "lsp" ]}

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
codeActionsOnSave = { mode = "all", "source.fixAll.eslint" = true }
format = { enable = true }
nodePath = ""
quiet = false
rulesCustomizations = []
run = "onType"
validate = "on"
experimental = {}
problems = { shortenToSingleLine = false }

[language-server.eslint.config.codeAction]
disableRuleComment = { enable = true, location = "separateLine" }
showDocumentation = { enable = false }

[language-server.vscode-json-language-server.config]
json = { validate = { enable = true }, format = { enable = true } }
provideFormatter = true

[language-server.vscode-css-language-server.config]
css = { validate = { enable = true } }
scss = { validate = { enable = true } }
less = { validate = { enable = true } }
provideFormatter = true

[language-server.typescript-language-server.config.plugins]
name = "@vue/typescript-plugin"
# change this line to your node_modules/@vue/language-server path
# location = '/home/allandt/.nvm/versions/node/v18.14.2/lib/node_modules/@vue/language-server'
languages = ["vue"]

[language-server.emmet-lsp]
command = "emmet-language-server"
args = ["--stdio"]

[language-server.volar]
command = "vue-language-server"
args = ["--stdio"]

[language-server.volar.config]
typescript = { tsdk = '/home/allandt/.nvm/versions/node/v18.14.2/lib/node_modules/typescript/bin' }

[[language]]
name = "typescript"
language-servers = [ "typescript-language-server", "eslint", "emmet-lsp" ]
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }
# formatter = { command = "dprint", args = [ "fmt", "--stdin", "typescript" ] }
auto-format = true

[[language]]
name = "tsx"
language-servers = [ "deno", "eslint", "emmet-lsp" ]
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }
#formatter = { command = "dprint", args = [ "fmt", "--stdin", "tsx" ] }
auto-format = true

[[language]]
name = "javascript"
language-servers = [ "typescript-language-server", "eslint", "emmet-lsp" ]
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }
#formatter = { command = "dprint", args = [ "fmt", "--stdin", "javascript" ] }
auto-format = true

[[language]]
name = "jsx"
language-servers = [ "typescript-language-server", "eslint", "emmet-lsp" ]
formatter = { command = "prettier", args = [ "--parser", "typescript" ] }
#formatter = { command = "dprint", args = [ "fmt", "--stdin", "jsx" ] }
auto-format = true

[[language]]
name = "json"
formatter = { command = "prettier", args = [ "--parser", "json" ] }
#formatter = { command = "dprint", args = [ "fmt", "--stdin", "json" ] }
auto-format = true

[[language]]
name = "html"
language-servers = [ "vscode-html-language-server", "emmet-lsp" ]
formatter = { command = 'prettier', args = ["--parser", "html"] }
auto-format = true

[[language]]
name = "css"
language-servers = [ "vscode-css-language-server", "emmet-lsp" ]
formatter = { command = 'prettier', args = ["--parser", "css"] }
auto-format = true

[[language]]
name = "scss"
language-servers = [ "vscode-css-language-server", "emmet-lsp" ]
formatter = { command = 'prettier', args = ["--parser", "scss"] }
auto-format = true

[[language]]
name = 'gohtml'
scope = 'text.html.basic'
injection-regex = 'html'
auto-format = true
language-servers = ['vscode-html-language-server', 'gopls']
file-types = ['gohtml']

[[language]]
name = "vue"
scope = "source.vue"
 file-types = ["vue"]
 injection-regex = "vue"
language-servers = ["vue-language-server", 'emmet-lsp', "typescript-language-server", "vscode-html-language-server", "vscode-css-language-server"]
formatter = { command = 'prettier', args = ["--parser", "vue"] }
auto-format = true
